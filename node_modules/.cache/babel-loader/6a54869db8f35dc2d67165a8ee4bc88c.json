{"ast":null,"code":"var _jsxFileName = \"/Users/ysl/Documents/other-project/\\u7384\\u8C37\\u4FE1\\u606F/code/biah/src/components/layout/HeaderBar.js\";\nimport React, { lazy, Suspense } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu, Icon, Layout } from 'antd';\nimport menuConfig from '../../config/menuConfig';\nimport { connect } from 'react-redux';\nimport { switchMenu } from '../../redux/action';\nimport './header.scss';\nimport logoURL from '../../images/logo.jpg';\nimport imgRefresh from \"../../images/refresh.svg\";\nconst {\n  Sider\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\nconst {\n  Header\n} = Layout;\n\nclass HeaderBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDefaultSelect = () => {\n      let menuConfigKeys = [];\n      menuConfig.forEach(item => {\n        if (item.children && item.children.length > 0) {\n          item.children.map(_sItem => {\n            menuConfigKeys.push(_sItem.key);\n          });\n        }\n\n        menuConfigKeys.push(item.key);\n      });\n      const pathname = window.location.pathname;\n      const currentKey = '/' + pathname.split('/')[1];\n      const titleArray = this.selectBreadcrumb(currentKey, pathname);\n\n      if (menuConfigKeys.indexOf(currentKey) > -1) {\n        this.setState({\n          defaultOpenKeys: [currentKey],\n          selectedKeys: [pathname]\n        });\n        this.props.handleClick(titleArray);\n      }\n    };\n\n    this.setMenu = (menu, pItem) => {\n      const {\n        selectedKeys\n      } = this.state;\n      return menu.map((item, index) => {\n        // console.log(item.key, selectedKeys)\n        let isSelected = item.key === selectedKeys;\n\n        if (item.children && item.children.length > 0) {\n          return /*#__PURE__*/React.createElement(SubMenu, {\n            key: `SubMenu-${index}`,\n            title: item.title,\n            popupClassName: 'header-sub-menu-wrapper',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }\n          }, item.children.map((subItem, idx) => /*#__PURE__*/React.createElement(Menu.Item, {\n            title: subItem.key,\n            key: subItem.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(NavLink, {\n            to: subItem.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }\n          }, subItem.title)))));\n        } else {\n          return /*#__PURE__*/React.createElement(Menu.Item, {\n            title: item.title,\n            key: item.key,\n            pitem: pItem,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(NavLink, {\n            to: item.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }\n          }, item.title)));\n        }\n      });\n    };\n\n    this.selectBreadcrumb = (currentKey, pathname) => {\n      const titleArray = [];\n      menuConfig.forEach(item => {\n        if (item.key === currentKey) {\n          titleArray.push(item.title);\n        }\n\n        if (item.children) {\n          item.children.forEach(sItem => {\n            if (sItem.key === pathname) {\n              titleArray.push(sItem.title);\n            }\n          });\n        }\n      });\n      return titleArray;\n    };\n\n    this.handleClick = item => {\n      const currentKey = '/' + item.key.split('/')[1];\n      const pathname = item.key; // const titleArray = this.selectBreadcrumb(currentKey, pathname);\n      // this.props.handleClick(titleArray);\n\n      this.setState({\n        selectedKeys: [item.key]\n      });\n    };\n\n    this.state = {\n      collapsed: false,\n      menuList: [],\n      defaultOpenKeys: [],\n      // 默认展开\n      defaultSelectedKeys: ['/'],\n      // 默认选中\n      selectedKeys: ['/syn']\n    }; // HeaderBar.that = this;\n  }\n\n  componentWillMount() {\n    this.handleDefaultSelect();\n  } // 刷新页面，处理默认选中\n\n\n  render() {\n    const {\n      defaultOpenKeys,\n      selectedKeys\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headBg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'header-logo',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Menu, {\n      onClick: this.handleClick // defaultOpenKeys={ defaultOpenKeys }\n      ,\n      selectedKeys: selectedKeys,\n      theme: \"light\",\n      mode: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, this.setMenu(menuConfig)), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'setting-wrapper',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'notice-icon icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'question-icon icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'setting-icon icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'user-icon icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleClick(titleArray) {\n      dispatch(switchMenu(titleArray));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderBar);","map":{"version":3,"sources":["/Users/ysl/Documents/other-project/玄谷信息/code/biah/src/components/layout/HeaderBar.js"],"names":["React","lazy","Suspense","NavLink","Menu","Icon","Layout","menuConfig","connect","switchMenu","logoURL","Sider","SubMenu","Header","HeaderBar","Component","constructor","props","handleDefaultSelect","menuConfigKeys","forEach","item","children","length","map","_sItem","push","key","pathname","window","location","currentKey","split","titleArray","selectBreadcrumb","indexOf","setState","defaultOpenKeys","selectedKeys","handleClick","setMenu","menu","pItem","state","index","isSelected","title","subItem","idx","sItem","collapsed","menuList","defaultSelectedKeys","componentWillMount","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { Menu, Icon, Layout } from 'antd';\nimport menuConfig from '../../config/menuConfig';\nimport { connect } from 'react-redux';\nimport { switchMenu } from '../../redux/action';\nimport './header.scss';\n\nimport logoURL from '../../images/logo.jpg';\nimport imgRefresh from '../../images/refresh.svg'\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\nconst { Header } = Layout;\n\nclass HeaderBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            menuList: [],\n            defaultOpenKeys: [],       // 默认展开\n            defaultSelectedKeys: ['/'],   // 默认选中\n            selectedKeys: ['/syn']\n        };\n        // HeaderBar.that = this;\n    }\n\n    componentWillMount() {\n        this.handleDefaultSelect();\n    }\n\n    // 刷新页面，处理默认选中\n    handleDefaultSelect = () => {\n        let menuConfigKeys = [];\n        menuConfig.forEach((item) => {\n            if (item.children && item.children.length > 0) {\n                item.children.map((_sItem) => {\n                    menuConfigKeys.push(_sItem.key);\n                })\n            }\n            menuConfigKeys.push(item.key);\n        });\n        const pathname = window.location.pathname;\n        const currentKey = '/' + pathname.split('/')[1];\n        const titleArray = this.selectBreadcrumb(currentKey, pathname);\n        if (menuConfigKeys.indexOf(currentKey) > -1) {\n            this.setState({\n                defaultOpenKeys: [currentKey],\n                selectedKeys: [pathname],\n            });\n            this.props.handleClick(titleArray);\n        }\n    };\n\n    // 处理菜单列表\n    setMenu = (menu, pItem) => {\n        const { selectedKeys } = this.state;\n        return menu.map((item, index) => {\n            // console.log(item.key, selectedKeys)\n            let isSelected = item.key === selectedKeys;\n            if (item.children && item.children.length > 0) {\n                return (\n                    <SubMenu key={`SubMenu-${index}`} title={item.title} popupClassName={'header-sub-menu-wrapper'}>\n                        {\n                            item.children.map((subItem, idx) => (\n                                <Menu.Item title={subItem.key} key={subItem.key}>\n                                    <NavLink to={subItem.key} >\n                                        <span>{subItem.title}</span>\n                                    </NavLink>\n                                </Menu.Item>\n                            ))\n                        }\n                    </SubMenu>\n                )\n            } else {\n                return (\n                    <Menu.Item title={item.title} key={item.key} pitem={pItem}>\n                        <NavLink to={item.key} >\n                            <span>{item.title}</span>\n                        </NavLink>\n                    </Menu.Item>\n                )\n            }\n        });\n    };\n\n    // 导出出面包屑数组\n    selectBreadcrumb = (currentKey, pathname) => {\n        const titleArray = [];\n        menuConfig.forEach((item) => {\n            if (item.key === currentKey) {\n                titleArray.push(item.title);\n            }\n            if (item.children) {\n                item.children.forEach((sItem) => {\n                    if (sItem.key === pathname) {\n                        titleArray.push(sItem.title);\n                    }\n                });\n            }\n        });\n        return titleArray;\n    };\n\n    // 点击侧边栏\n    handleClick = (item) => {\n        const currentKey = '/' + item.key.split('/')[1];\n        const pathname = item.key;\n        // const titleArray = this.selectBreadcrumb(currentKey, pathname);\n        // this.props.handleClick(titleArray);\n        this.setState({\n            selectedKeys: [item.key]\n        })\n    };\n\n    render() {\n        const { defaultOpenKeys, selectedKeys } = this.state;\n        return (\n            <div className=\"headBg\">\n                <div className={'header-logo'}>\n                    {/*<img src={logoURL}/>*/}\n                </div>\n                <Menu onClick={ this.handleClick }\n                      // defaultOpenKeys={ defaultOpenKeys }\n                      selectedKeys={ selectedKeys }\n                      theme=\"light\"\n                      mode=\"horizontal\">\n                    { this.setMenu(menuConfig) }\n                </Menu>\n                <div className={'setting-wrapper'}>\n                    <div className={'notice-icon icon'}/>\n                    <div className={'question-icon icon'}/>\n                    <div className={'setting-icon icon'}/>\n                    <div className={'user-icon icon'}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = () => {\n    return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick(titleArray) {\n            dispatch(switchMenu(titleArray));\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderBar);\n"]},"metadata":{},"sourceType":"module"}