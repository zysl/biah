{"ast":null,"code":"var _jsxFileName = \"/Users/ysl/Documents/other-project/analysis_index/src/components/layout/SiderBar.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu, Icon, Layout } from 'antd';\nimport menuConfig from '../../config/menuConfig';\nimport logoURL from '../../images/logo.jpg';\nimport { connect } from 'react-redux';\nimport { switchMenu } from '../../redux/action';\nconst {\n  Sider\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\n\nclass SiderBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDefaultSelect = () => {\n      let menuConfigKeys = [];\n      menuConfig.forEach(item => {\n        menuConfigKeys.push(item.key);\n      });\n      const pathname = window.location.pathname;\n      const currentKey = '/' + pathname.split('/')[1];\n      const titleArray = this.selectBreadcrumb(currentKey, pathname);\n\n      if (menuConfigKeys.indexOf(currentKey) === 1) {\n        this.setState({\n          defaultOpenKeys: [currentKey],\n          defaultSelectedKeys: [pathname]\n        });\n        this.props.handleClick(titleArray);\n      }\n    };\n\n    this.setMenu = (menu, pItem) => {\n      const {\n        selectedKeys\n      } = this.state;\n      return menu.map(item => {\n        console.log(item.key, selectedKeys);\n        let isSelected = item.key === selectedKeys;\n        return /*#__PURE__*/React.createElement(Menu.Item, {\n          title: item.title,\n          key: item.key,\n          pitem: pItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: item.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, isSelected ? /*#__PURE__*/React.createElement(\"img\", {\n          className: \"sider_icon\",\n          src: item.iconSelect,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 28\n          }\n        }) : /*#__PURE__*/React.createElement(\"img\", {\n          className: \"sider_icon\",\n          src: item.icon,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, item.title)));\n      });\n    };\n\n    this.selectBreadcrumb = (currentKey, pathname) => {\n      const titleArray = [];\n      menuConfig.forEach(item => {\n        if (item.key === currentKey) {\n          titleArray.push(item.title);\n        }\n\n        if (item.children) {\n          item.children.forEach(sItem => {\n            if (sItem.key === pathname) {\n              titleArray.push(sItem.title);\n            }\n          });\n        }\n      });\n      return titleArray;\n    };\n\n    this.handleClick = item => {\n      const currentKey = '/' + item.key.split('/')[1];\n      const pathname = item.key;\n      const titleArray = SiderBar.that.selectBreadcrumb(currentKey, pathname);\n      this.props.handleClick(titleArray);\n      this.setState({\n        selectedKeys: item.key\n      });\n    };\n\n    this.state = {\n      collapsed: false,\n      menuList: [],\n      defaultOpenKeys: [],\n      // 默认展开\n      defaultSelectedKeys: ['/'],\n      // 默认选中\n      selectedKeys: ''\n    };\n    SiderBar.that = this;\n  }\n\n  componentWillMount() {\n    this.handleDefaultSelect();\n    const menuList = this.setMenu(menuConfig);\n    this.setState({\n      menuList\n    });\n  } // 刷新页面，处理默认选中\n\n\n  render() {\n    let name;\n    return /*#__PURE__*/React.createElement(Sider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo-img\",\n      src: logoURL,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Menu, {\n      onClick: this.handleClick,\n      theme: \"light\",\n      defaultOpenKeys: this.state.defaultOpenKeys,\n      defaultSelectedKeys: this.state.defaultSelectedKeys,\n      mode: \"inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, this.setMenu(menuConfig)));\n  }\n\n}\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleClick(titleArray) {\n      dispatch(switchMenu(titleArray));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiderBar);","map":{"version":3,"sources":["/Users/ysl/Documents/other-project/analysis_index/src/components/layout/SiderBar.js"],"names":["React","NavLink","Menu","Icon","Layout","menuConfig","logoURL","connect","switchMenu","Sider","SubMenu","SiderBar","Component","constructor","props","handleDefaultSelect","menuConfigKeys","forEach","item","push","key","pathname","window","location","currentKey","split","titleArray","selectBreadcrumb","indexOf","setState","defaultOpenKeys","defaultSelectedKeys","handleClick","setMenu","menu","pItem","selectedKeys","state","map","console","log","isSelected","title","iconSelect","icon","children","sItem","that","collapsed","menuList","componentWillMount","render","name","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { Menu, Icon, Layout } from 'antd';\nimport menuConfig from '../../config/menuConfig';\nimport logoURL from '../../images/logo.jpg';\nimport { connect } from 'react-redux';\nimport { switchMenu } from '../../redux/action';\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SiderBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      menuList: [],\n      defaultOpenKeys: [],       // 默认展开\n      defaultSelectedKeys: ['/'],   // 默认选中\n      selectedKeys: ''\n    };\n    SiderBar.that = this;\n  }\n\n  componentWillMount() {\n    this.handleDefaultSelect();\n    const menuList = this.setMenu(menuConfig);\n    this.setState({\n      menuList\n    });\n  }\n\n  // 刷新页面，处理默认选中\n  handleDefaultSelect = () => {\n    let menuConfigKeys = [];\n    menuConfig.forEach((item) => {\n      menuConfigKeys.push(item.key);\n    });\n    const pathname = window.location.pathname;\n    const currentKey = '/' + pathname.split('/')[1];\n    const titleArray = this.selectBreadcrumb(currentKey, pathname);\n    if (menuConfigKeys.indexOf(currentKey) === 1) {\n      this.setState({\n        defaultOpenKeys: [currentKey],\n        defaultSelectedKeys: [pathname],\n      });\n      this.props.handleClick(titleArray);\n    }\n  };\n\n  // 处理菜单列表\n  setMenu = (menu, pItem) => {\n    const { selectedKeys } = this.state;\n    return menu.map((item) => {\n      console.log(item.key, selectedKeys)\n      let isSelected = item.key === selectedKeys;\n      return (\n        <Menu.Item title={ item.title } key={ item.key } pitem={ pItem }>\n          <NavLink to={ item.key } >\n            {/* { item.icon && <Icon type={ item.icon }/> } */}\n            {\n              isSelected ? <img className=\"sider_icon\" src={item.iconSelect} alt=''/> \n              : <img className=\"sider_icon\" src={item.icon} alt=''/>\n            }\n\n\t\t\t\n            <span>{ item.title }</span>\n          </NavLink>\n        </Menu.Item>\n      )\n    });\n  };\n\n  // 导出出面包屑数组\n  selectBreadcrumb = (currentKey, pathname) => {\n    const titleArray = [];\n    menuConfig.forEach((item) => {\n      if (item.key === currentKey) {\n        titleArray.push(item.title);\n      }\n      if (item.children) {\n        item.children.forEach((sItem) => {\n          if (sItem.key === pathname) {\n            titleArray.push(sItem.title);\n          }\n        });\n      }\n    });\n    return titleArray;\n  };\n\n  // 点击侧边栏\n  handleClick = (item) => {\n    const currentKey = '/' + item.key.split('/')[1];\n    const pathname = item.key;\n    const titleArray = SiderBar.that.selectBreadcrumb(currentKey, pathname);\n    this.props.handleClick(titleArray);\n    this.setState({\n      selectedKeys: item.key\n    })\n  };\n\n  render() {\n    let name;\n    return (\n      <Sider>\n        <div className=\"logo\">\n          <img className=\"logo-img\" src={ logoURL } alt=\"\"/>\n        </div>\n        <Menu onClick={ this.handleClick } theme=\"light\"\n              defaultOpenKeys={ this.state.defaultOpenKeys }\n              defaultSelectedKeys={ this.state.defaultSelectedKeys }\n              mode=\"inline\">\n          { this.setMenu(menuConfig) }\n        </Menu>\n      </Sider>\n    );\n  }\n}\n\nconst mapStateToProps = () => {\n  return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleClick(titleArray) {\n      dispatch(switchMenu(titleArray));\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiderBar);\n"]},"metadata":{},"sourceType":"module"}